name: Tests

on:
    workflow_dispatch:
    pull_request:
        branches:
            - main

jobs:
    test:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                node-version: [18.x, 20.x]

        runs-on: ${{ matrix.os }}
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            # Cache root dependencies
            - name: Cache root dependencies
              uses: actions/cache@v4
              id: root-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-npm-root-${{ hashFiles('package-lock.json') }}

            # Cache webview-ui dependencies
            - name: Cache webview-ui dependencies
              uses: actions/cache@v4
              id: webview-cache
              with:
                  path: webview-ui/node_modules
                  key: ${{ runner.os }}-npm-webview-${{ hashFiles('webview-ui/package-lock.json') }}

            # Install dependencies
            - name: Install root dependencies
              if: steps.root-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Install webview-ui dependencies
              if: steps.webview-cache.outputs.cache-hit != 'true'
              run: cd webview-ui && npm ci

            # Run checks and tests
            - name: Type Check
              run: npm run check-types

            - name: Lint
              run: npm run lint

            - name: Run Tests with Coverage
              run: npm run test:coverage

            # Upload coverage to Codecov
            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4
              env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              with:
                files: ./coverage/coverage-final.json
                fail_ci_if_error: true

            # Optional: Run tests on specific platforms
            - name: Tests on ${{ matrix.os }}
              run: xvfb-run -a npm run test
              if: runner.os == 'Linux'
